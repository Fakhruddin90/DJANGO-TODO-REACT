[{"/Users/fakhruddinmohamadsaupe/Development/Web Development/django-todo-react/frontend/src/index.js":"1","/Users/fakhruddinmohamadsaupe/Development/Web Development/django-todo-react/frontend/src/App.js":"2","/Users/fakhruddinmohamadsaupe/Development/Web Development/django-todo-react/frontend/src/reportWebVitals.js":"3","/Users/fakhruddinmohamadsaupe/Development/Web Development/django-todo-react/frontend/src/components/Modal.js":"4"},{"size":543,"mtime":1628422881342,"results":"5","hashOfConfig":"6"},{"size":4446,"mtime":1628423780670,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1628422331809,"results":"8","hashOfConfig":"6"},{"size":2198,"mtime":1628423211561,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1q2toaq",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/Users/fakhruddinmohamadsaupe/Development/Web Development/django-todo-react/frontend/src/index.js",[],["20","21"],"/Users/fakhruddinmohamadsaupe/Development/Web Development/django-todo-react/frontend/src/App.js",["22","23"],"import React, { Component } from \"react\";\nimport Modal from \"./components/Modal\";\nimport axios from \"axios\";\n\nconst todoItems = [\n  {\n    id: 1,\n    title: \"Go to Market\",\n    description: \"Buy ingredients to prepare dinner\",\n    completed: true,\n  },\n  {\n    id: 2,\n    title: \"Study\",\n    description: \"Read Algebra and History textbook for the upcoming test\",\n    completed: false,\n  },\n  {\n    id: 3,\n    title: \"Sammy's books\",\n    description: \"Go to library to return Sammy's books\",\n    completed: true,\n  },\n  {\n    id: 4,\n    title: \"Article\",\n    description: \"Write article on how to use Django with React\",\n    completed: false,\n  },\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      todoList: [],\n      modal: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.refreshList();\n  }\n\n  refreshList = () => {\n    axios\n      .get(\"/api/todos/\")\n      .then((res) => this.setState({ todoList: res.data }))\n      .catch((err) => console.log(err));\n  };\n\n  toggle = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n\n  handleSubmit = (item) => {\n    this.toggle();\n\n    if (item.id) {\n      axios\n        .put(`/api/todos/${item.id}/`, item)\n        .then((res) => this.refreshList());\n      return;\n    }\n    axios\n      .post(\"/api/todos/\", item)\n      .then((res) => this.refreshList());\n\n  };\n\n  handleDelete = (item) => {\n    axios\n      .delete(`/api/todos/${item.id}/`)\n      .then((res) => this.refreshList());\n  };\n\n  createItem = () => {\n    const item = { title: \"\", description: \"\", completed: false };\n\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n\n  editItem = (item) => {\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n\n  displayCompleted = (status) => {\n    if (status) {\n      return this.setState({ viewCompleted: true });\n    }\n\n    return this.setState({ viewCompleted: false });\n  };\n\n  renderTabList = () => {\n    return (\n      <div className=\"nav nav-tabs\">\n        <span\n          className={this.state.viewCompleted ? \"nav-link active\" : \"nav-link\"}\n          onClick={() => this.displayCompleted(true)}\n        >\n          Complete\n        </span>\n        <span\n          className={this.state.viewCompleted ? \"nav-link\" : \"nav-link active\"}\n          onClick={() => this.displayCompleted(false)}\n        >\n          Incomplete\n        </span>\n      </div>\n    );\n  };\n\n  renderItems = () => {\n    const { viewCompleted } = this.state;\n    const newItems = this.state.todoList.filter(\n      (item) => item.completed == viewCompleted\n    );\n\n    return newItems.map((item) => (\n      <li\n        key={item.id}\n        className=\"list-group-item d-flex justify-content-between align-items-center\"\n      >\n        <span\n          className={`todo-title mr-2 ${\n            this.state.viewCompleted ? \"completed-todo\" : \"\"\n          }`}\n          title={item.description}\n        >\n          {item.title}\n        </span>\n        <span>\n          <button\n            className=\"btn btn-secondary mr-2\"\n            onClick={() => this.editItem(item)}\n          >\n            Edit\n          </button>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => this.handleDelete(item)}\n          >\n            Delete\n          </button>\n        </span>\n      </li>\n    ));\n  };\n\n  render() {\n    return (\n      <main className=\"container\">\n        <h1 className=\"text-white text-uppercase text-center my-4\">Todo app</h1>\n        <div className=\"row\">\n          <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n            <div className=\"card p-3\">\n              <div className=\"mb-4\">\n                <button\n                  className=\"btn btn-primary\"\n                  onClick={this.createItem}\n                >\n                  Add task\n                </button>\n              </div>\n              {this.renderTabList()}\n              <ul className=\"list-group list-group-flush border-top-0\">\n                {this.renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n        {this.state.modal ? (\n          <Modal\n            activeItem={this.state.activeItem}\n            toggle={this.toggle}\n            onSave={this.handleSubmit}\n          />\n        ) : null}\n      </main>\n    );\n  }\n}\n\nexport default App;","/Users/fakhruddinmohamadsaupe/Development/Web Development/django-todo-react/frontend/src/reportWebVitals.js",[],"/Users/fakhruddinmohamadsaupe/Development/Web Development/django-todo-react/frontend/src/components/Modal.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":5,"column":7,"nodeType":"30","messageId":"31","endLine":5,"endColumn":16},{"ruleId":"32","severity":1,"message":"33","line":123,"column":32,"nodeType":"34","messageId":"35","endLine":123,"endColumn":34},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'todoItems' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]